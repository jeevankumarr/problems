"""
Given two strings s and t which consist of only lowercase letters.
String t is generated by random shuffling string s and then add one
more letter at a random position.
Find the letter that was added in t.
Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.
"""

class Solution():
    def findTheDifference(self, s, t):
        h = {}
        i,j = 0, 0
        while i < len(s) or j < len(t):
            if i < len(s):
                if s[i] not in h:
                    h[s[i]] = 1
                else:
                    h[s[i]] += 1
            if j < len(t):
                if t[j] not in h:
                    h[t[j]] = -1
                else:
                    h[t[j]] -= 1
            i += 1
            j += 1

        for e in h:
            if h[e] != 0:
                return e
        # print(h)
        return None
    def findTheDifference_XOR(self, s, t):

        res = 0
        for i in range(len(s)):
            res = res ^ ord(s[i])
            res = res ^ ord(t[i])

        res = res ^ ord(t[len(t) - 1])

        return chr(res)
    def findTheDifference_SET(self, s, t):

        tset = set(t)

        for e in tset:
            if s.count(e) != t.count(e):
                return e
        return None

def test_diff():
    assert Solution().findTheDifference("abcd", "acbcd") == "c"
    assert Solution().findTheDifference("abcd", "abcde") == "e"
    assert Solution().findTheDifference("abcd", "eabcd") == "e"

    assert Solution().findTheDifference_XOR("abcd", "acbcd") == "c"
    assert Solution().findTheDifference_XOR("abcd", "abcde") == "e"
    assert Solution().findTheDifference_XOR("abcd", "eabcd") == "e"


    assert Solution().findTheDifference_SET("abcd", "acbcd") == "c"
    assert Solution().findTheDifference_SET("abcd", "abcde") == "e"
    assert Solution().findTheDifference_SET("abcd", "eabcd") == "e"